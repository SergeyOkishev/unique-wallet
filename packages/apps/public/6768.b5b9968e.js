((typeof self !== 'undefined' ? self : this)["webpackChunk_polkadot_apps"] = (typeof self !== 'undefined' ? self : this)["webpackChunk_polkadot_apps"] || []).push([[6768],{

/***/ 46768:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "all": () => (/* binding */ networks_all),
  "available": () => (/* binding */ available),
  "default": () => (/* binding */ networks),
  "packageInfo": () => (/* reexport */ packageInfo/* packageInfo */.b)
});

;// CONCATENATED MODULE: ../../node_modules/@polkadot/networks/defaults.js
// Copyright 2017-2021 @polkadot/networks authors & contributors
// SPDX-License-Identifier: Apache-2.0
// NOTE: In the case where the network was hard-spooned and multiple genesisHashes
// are provided, it needs to be in reverse order, i.e. most-recent first, oldest
// last. This make lookups for the current a simple genesisHash[0]
// (See Kusama as an example)
const knownGenesis = {
  'dock-mainnet': ['0xf73467c6544aa68df2ee546b135f955c46b90fa627e9b5d7935f41061bb8a5a9'],
  edgeware: ['0x742a2ca70c2fda6cee4f8df98d64c4c670a052d9568058982dad9d5a7a135c5b'],
  equilibrium: ['0x6f1a800de3daff7f5e037ddf66ab22ce03ab91874debeddb1086f5f7dbd48925'],
  hydradx: ['0xd2a620c27ec5cbc5621ff9a522689895074f7cca0d08e7134a7804e1a3ba86fc', // Snakenet Gen3-1
  '0x10af6e84234477d84dc572bac0789813b254aa490767ed06fb9591191d1073f9', // Snakenet Gen3
  '0x3d75507dd46301767e601265791da1d9cb47b6ebc94e87347b635e5bf58bd047', // Snakenet Gen2
  '0x0ed32bfcab4a83517fac88f2aa7cbc2f88d3ab93be9a12b6188a036bf8a943c2' // Snakenet Gen1
  ],
  kulupu: ['0xf7a99d3cb92853d00d5275c971c132c074636256583fee53b3bbe60d7b8769ba'],
  kusama: ['0xb0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe', // Kusama CC3,
  '0xe3777fa922cafbff200cadeaea1a76bd7898ad5b89f7848999058b50e715f636', // Kusama CC2
  '0x3fd7b9eb6a00376e5be61f01abb429ffb0b104be05eaff4d458da48fcd425baf' // Kusama CC1
  ],
  plasm: ['0x3e86364d4b4894021cb2a0390bcf2feb5517d5292f2de2bb9404227e908b0b8b'],
  polkadot: ['0x91b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3'],
  polymesh: ['0x9deeb940c92ae02111c3bd5baca89970384f4c9849f02a1b2e53e66414d30f9f'],
  subsocial: ['0x0bd72c1c305172e1275278aaeb3f161e02eccb7a819e63f62d47bd53a28189f8']
}; // these are icon overrides

const knownIcon = {
  kusama: 'polkadot',
  polkadot: 'polkadot'
}; // support for ledger

const knownLedger = {
  'dock-mainnet': 0x00000252,
  equilibrium: 0x05f5e0fd,
  kusama: 0x000001b2,
  polkadot: 0x00000162,
  polymesh: 0x00000253
}; // testnets should not allow selection

const knownTestnet = {
  'dock-testnet': true,
  jupiter: true,
  'mathchain-testnet': true,
  'zero-alphaville': true
};
;// CONCATENATED MODULE: ../../node_modules/@polkadot/networks/substrate.js
// Copyright 2017-2021 @polkadot/networks authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Auto-generated by yarn networks:sync (via scripts/fromSubstrate.mjs)
//
// Do not edit, rather
//   - make a PR to the upstream registry as per https://raw.githubusercontent.com/paritytech/substrate/master/ss58-registry.json
//   - yarn networks:sync
//
const knownSubstrate = [{
  decimals: [10],
  displayName: 'Polkadot Relay Chain',
  network: 'polkadot',
  prefix: 0,
  standardAccount: '*25519',
  symbols: ['DOT'],
  website: 'https://polkadot.network'
}, {
  decimals: null,
  displayName: 'Bare 32-bit Schnorr/Ristretto (S/R 25519) public key.',
  network: null,
  prefix: 1,
  standardAccount: null,
  symbols: null,
  website: null
}, {
  decimals: [12],
  displayName: 'Kusama Relay Chain',
  network: 'kusama',
  prefix: 2,
  standardAccount: '*25519',
  symbols: ['KSM'],
  website: 'https://kusama.network'
}, {
  decimals: null,
  displayName: 'Bare 32-bit Ed25519 public key.',
  network: null,
  prefix: 3,
  standardAccount: null,
  symbols: null,
  website: null
}, {
  decimals: null,
  displayName: 'Katal Chain',
  network: 'katalchain',
  prefix: 4,
  standardAccount: '*25519',
  symbols: null,
  website: null
}, {
  decimals: [15],
  displayName: 'Plasm Network',
  network: 'plasm',
  prefix: 5,
  standardAccount: '*25519',
  symbols: ['PLM'],
  website: 'https://plasmnet.io'
}, {
  decimals: [12],
  displayName: 'Bifrost',
  network: 'bifrost',
  prefix: 6,
  standardAccount: '*25519',
  symbols: ['BNC'],
  website: 'https://bifrost.finance/'
}, {
  decimals: [18],
  displayName: 'Edgeware',
  network: 'edgeware',
  prefix: 7,
  standardAccount: '*25519',
  symbols: ['EDG'],
  website: 'https://edgewa.re'
}, {
  decimals: [12],
  displayName: 'Karura',
  network: 'karura',
  prefix: 8,
  standardAccount: '*25519',
  symbols: ['KAR'],
  website: 'https://karura.network/'
}, {
  decimals: [18],
  displayName: 'Laminar Reynolds Canary',
  network: 'reynolds',
  prefix: 9,
  standardAccount: '*25519',
  symbols: ['REY'],
  website: 'http://laminar.network/'
}, {
  decimals: [12],
  displayName: 'Acala',
  network: 'acala',
  prefix: 10,
  standardAccount: '*25519',
  symbols: ['ACA'],
  website: 'https://acala.network/'
}, {
  decimals: [18],
  displayName: 'Laminar',
  network: 'laminar',
  prefix: 11,
  standardAccount: '*25519',
  symbols: ['LAMI'],
  website: 'http://laminar.network/'
}, {
  decimals: [6],
  displayName: 'Polymesh',
  network: 'polymesh',
  prefix: 12,
  standardAccount: '*25519',
  symbols: ['POLYX'],
  website: 'https://polymath.network/'
}, {
  decimals: null,
  displayName: 'SubstraTEE',
  network: 'substratee',
  prefix: 13,
  standardAccount: '*25519',
  symbols: null,
  website: 'https://www.substratee.com'
}, {
  decimals: [0],
  displayName: 'Totem',
  network: 'totem',
  prefix: 14,
  standardAccount: '*25519',
  symbols: ['XTX'],
  website: 'https://totemaccounting.com'
}, {
  decimals: [12],
  displayName: 'Synesthesia',
  network: 'synesthesia',
  prefix: 15,
  standardAccount: '*25519',
  symbols: ['SYN'],
  website: 'https://synesthesia.network/'
}, {
  decimals: [12],
  displayName: 'Kulupu',
  network: 'kulupu',
  prefix: 16,
  standardAccount: '*25519',
  symbols: ['KLP'],
  website: 'https://kulupu.network/'
}, {
  decimals: null,
  displayName: 'Dark Mainnet',
  network: 'dark',
  prefix: 17,
  standardAccount: '*25519',
  symbols: null,
  website: null
}, {
  decimals: [9, 9],
  displayName: 'Darwinia Network',
  network: 'darwinia',
  prefix: 18,
  standardAccount: '*25519',
  symbols: ['RING', 'KTON'],
  website: 'https://darwinia.network/'
}, {
  decimals: [12],
  displayName: 'GeekCash',
  network: 'geek',
  prefix: 19,
  standardAccount: '*25519',
  symbols: ['GEEK'],
  website: 'https://geekcash.org'
}, {
  decimals: [12],
  displayName: 'Stafi',
  network: 'stafi',
  prefix: 20,
  standardAccount: '*25519',
  symbols: ['FIS'],
  website: 'https://stafi.io'
}, {
  decimals: [6],
  displayName: 'Dock Testnet',
  network: 'dock-testnet',
  prefix: 21,
  standardAccount: '*25519',
  symbols: ['DCK'],
  website: 'https://dock.io'
}, {
  decimals: [6],
  displayName: 'Dock Mainnet',
  network: 'dock-mainnet',
  prefix: 22,
  standardAccount: '*25519',
  symbols: ['DCK'],
  website: 'https://dock.io'
}, {
  decimals: null,
  displayName: 'ShiftNrg',
  network: 'shift',
  prefix: 23,
  standardAccount: '*25519',
  symbols: null,
  website: null
}, {
  decimals: [18],
  displayName: 'ZERO',
  network: 'zero',
  prefix: 24,
  standardAccount: '*25519',
  symbols: ['PLAY'],
  website: 'https://zero.io'
}, {
  decimals: [18],
  displayName: 'ZERO Alphaville',
  network: 'zero-alphaville',
  prefix: 25,
  standardAccount: '*25519',
  symbols: ['PLAY'],
  website: 'https://zero.io'
}, {
  decimals: [10],
  displayName: 'Jupiter',
  network: 'jupiter',
  prefix: 26,
  standardAccount: '*25519',
  symbols: ['jDOT'],
  website: 'https://jupiter.patract.io'
}, {
  decimals: null,
  displayName: 'Subsocial',
  network: 'subsocial',
  prefix: 28,
  standardAccount: '*25519',
  symbols: null,
  website: null
}, {
  decimals: [18],
  displayName: 'Dhiway CORD Network',
  network: 'cord',
  prefix: 29,
  standardAccount: '*25519',
  symbols: ['DCU'],
  website: 'https://dhiway.com/'
}, {
  decimals: [12],
  displayName: 'Phala Network',
  network: 'phala',
  prefix: 30,
  standardAccount: '*25519',
  symbols: ['PHA'],
  website: 'https://phala.network'
}, {
  decimals: [12],
  displayName: 'Litentry Network',
  network: 'litentry',
  prefix: 31,
  standardAccount: '*25519',
  symbols: ['LIT'],
  website: 'https://litentry.com/'
}, {
  decimals: [9],
  displayName: 'Robonomics',
  network: 'robonomics',
  prefix: 32,
  standardAccount: '*25519',
  symbols: ['XRT'],
  website: 'https://robonomics.network'
}, {
  decimals: null,
  displayName: 'DataHighway',
  network: 'datahighway',
  prefix: 33,
  standardAccount: '*25519',
  symbols: null,
  website: null
}, {
  decimals: [12],
  displayName: 'Ares Protocol',
  network: 'ares',
  prefix: 34,
  standardAccount: '*25519',
  symbols: ['ARES'],
  website: 'https://www.aresprotocol.com/'
}, {
  decimals: [15],
  displayName: 'Valiu Liquidity Network',
  network: 'vln',
  prefix: 35,
  standardAccount: '*25519',
  symbols: ['USDv'],
  website: 'https://valiu.com/'
}, {
  decimals: [18],
  displayName: 'Centrifuge Chain',
  network: 'centrifuge',
  prefix: 36,
  standardAccount: '*25519',
  symbols: ['RAD'],
  website: 'https://centrifuge.io/'
}, {
  decimals: [18],
  displayName: 'Nodle Chain',
  network: 'nodle',
  prefix: 37,
  standardAccount: '*25519',
  symbols: ['NODL'],
  website: 'https://nodle.io/'
}, {
  decimals: [18],
  displayName: 'KILT Chain',
  network: 'kilt',
  prefix: 38,
  standardAccount: '*25519',
  symbols: ['KILT'],
  website: 'https://kilt.io/'
}, {
  decimals: [18],
  displayName: 'MathChain mainnet',
  network: 'mathchain',
  prefix: 39,
  standardAccount: '*25519',
  symbols: ['MATH'],
  website: 'https://mathwallet.org'
}, {
  decimals: [18],
  displayName: 'MathChain testnet',
  network: 'mathchain-testnet',
  prefix: 40,
  standardAccount: '*25519',
  symbols: ['MATH'],
  website: 'https://mathwallet.org'
}, {
  decimals: null,
  displayName: 'Polimec Chain',
  network: 'poli',
  prefix: 41,
  standardAccount: '*25519',
  symbols: null,
  website: 'https://polimec.io/'
}, {
  decimals: null,
  displayName: 'Substrate',
  network: 'substrate',
  prefix: 42,
  standardAccount: '*25519',
  symbols: null,
  website: 'https://substrate.dev/'
}, {
  decimals: null,
  displayName: 'Bare 32-bit ECDSA SECP-256k1 public key.',
  network: null,
  prefix: 43,
  standardAccount: null,
  symbols: null,
  website: null
}, {
  decimals: [8],
  displayName: 'ChainX',
  network: 'chainx',
  prefix: 44,
  standardAccount: '*25519',
  symbols: ['PCX'],
  website: 'https://chainx.org/'
}, {
  decimals: [12, 12],
  displayName: 'UniArts Network',
  network: 'uniarts',
  prefix: 45,
  standardAccount: '*25519',
  symbols: ['UART', 'UINK'],
  website: 'https://uniarts.me'
}, {
  decimals: null,
  displayName: 'This prefix is reserved.',
  network: 'reserved46',
  prefix: 46,
  standardAccount: null,
  symbols: null,
  website: null
}, {
  decimals: null,
  displayName: 'This prefix is reserved.',
  network: 'reserved47',
  prefix: 47,
  standardAccount: null,
  symbols: null,
  website: null
}, {
  decimals: [12],
  displayName: 'Neatcoin Mainnet',
  network: 'neatcoin',
  prefix: 48,
  standardAccount: '*25519',
  symbols: ['NEAT'],
  website: 'https://neatcoin.org'
}, {
  decimals: [12],
  displayName: 'HydraDX',
  network: 'hydradx',
  prefix: 63,
  standardAccount: '*25519',
  symbols: ['HDX'],
  website: 'https://hydradx.io'
}, {
  decimals: [18],
  displayName: 'AvN Mainnet',
  network: 'aventus',
  prefix: 65,
  standardAccount: '*25519',
  symbols: ['AVT'],
  website: 'https://aventus.io'
}, {
  decimals: [12],
  displayName: 'Crust Network',
  network: 'crust',
  prefix: 66,
  standardAccount: '*25519',
  symbols: ['CRU'],
  website: 'https://crust.network'
}, {
  decimals: [0, 9, 9, 9, 9, 9, 9, 9],
  displayName: 'Equilibrium Network',
  network: 'equilibrium',
  prefix: 67,
  standardAccount: '*25519',
  symbols: ['Unknown', 'USD', 'EQ', 'ETH', 'BTC', 'EOS', 'DOT', 'CRV'],
  website: 'https://equilibrium.io'
}, {
  decimals: [18],
  displayName: 'SORA Network',
  network: 'sora',
  prefix: 69,
  standardAccount: '*25519',
  symbols: ['XOR'],
  website: 'https://sora.org'
}, {
  decimals: [12],
  displayName: 'Manta network',
  network: 'manta',
  prefix: 77,
  standardAccount: '*25519',
  symbols: ['MA'],
  website: 'https://manta.network'
}, {
  decimals: [12],
  displayName: 'Calamari: Manta Canary Network',
  network: 'calamari',
  prefix: 78,
  standardAccount: '*25519',
  symbols: ['KMA'],
  website: 'https://manta.network'
}, {
  decimals: [18],
  displayName: 'Social Network',
  network: 'social-network',
  prefix: 252,
  standardAccount: '*25519',
  symbols: ['NET'],
  website: 'https://social.network'
}, {
  decimals: [12],
  displayName: 'Basilisk',
  network: 'basilisk',
  prefix: 10041,
  standardAccount: '*25519',
  symbols: ['BSX'],
  website: 'https://bsx.fi'
}];
// EXTERNAL MODULE: ../../node_modules/@polkadot/networks/packageInfo.js
var packageInfo = __webpack_require__(28824);
;// CONCATENATED MODULE: ../../node_modules/@polkadot/networks/index.js
// Copyright 2017-2021 @polkadot/networks authors & contributors
// SPDX-License-Identifier: Apache-2.0


 // These are known prefixes that are not sorted

const UNSORTED = [0, 2, 42];
const networks_all = knownSubstrate.map(o => {
  const network = o.network || '';
  const n = o;
  n.slip44 = knownLedger[network];
  n.hasLedgerSupport = !!n.slip44;
  n.genesisHash = knownGenesis[network] || [];
  n.icon = knownIcon[network] || 'substrate';
  n.isIgnored = !network || !!knownTestnet[network] || network.startsWith('reserved');
  return n;
}); // The list of available/claimed prefixes
//   - no testnets
//   - we only include those where we have a standardAccount
//   - when no icon has been specified, default to substrate
//   - sort by name, however we keep 0, 2, 42 first in the list

const available = networks_all.filter(n => !n.isIgnored && !!n.network).sort((a, b) => UNSORTED.includes(a.prefix) === UNSORTED.includes(b.prefix) ? 0 : UNSORTED.includes(a.prefix) ? -1 : UNSORTED.includes(b.prefix) ? 1 : a.displayName.localeCompare(b.displayName)); // A filtered list of those chains we have details about (genesisHashes)

/* harmony default export */ const networks = (available.filter(n => n.genesisHash.length || n.prefix === 42));

/***/ }),

/***/ 28824:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "b": () => (/* binding */ packageInfo)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/networks authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Auto-generated by @polkadot/dev, do not edit
const packageInfo = {
  name: '@polkadot/networks',
  version: '6.7.1'
};

/***/ })

}]);